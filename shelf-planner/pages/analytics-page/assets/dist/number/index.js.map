{"version":3,"sources":["webpack://wc.[modulename]/webpack/bootstrap","webpack://wc.[modulename]/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://wc.[modulename]/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://wc.[modulename]/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://wc.[modulename]/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://wc.[modulename]/./node_modules/locutus/php/strings/number_format.js","webpack://wc.[modulename]/./packages/number/src/index.js","webpack://wc.[modulename]/external \"lodash\""],"names":["number_format","require","precision","number","parseFloat","isNaN","decimalSeparator","get","thousandSeparator","parseInt","decimals","isFinite","Math","numberFormat","secondaryValue","primaryValue"],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAe;AACf;AACA,C;;;;;;;;;;;;ACFA;AAAA;AAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6CAA6C,+BAA+B;AAC5E;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;AC5BA;AAAA;AAAe;AACf;AACA,C;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACY;AACV;AACjC;AACf,SAAS,+DAAc,SAAS,qEAAoB,YAAY,gEAAe;AAC/E,C;;;;;;;;;;;;ACLa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,EAAE;AACtC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yC;;;;;;;;;;;;;;;;;;;;ACtFA;;AACA;;;;AAGA;;AACA,IAAMA,aAAa,GAAGC,mBAAO,CAA7B,8FAA6B,CAA7B;AAEA;;;;;;;;;;AAQO,8BAAkD;AAAA,MAAnBC,SAAmB,uEAAP,IAAO;;AACxD,MAAK,aAAa,OAAlB,QAAkC;AACjCC,UAAM,GAAGC,UAAU,CAAnBD,MAAmB,CAAnBA;AACA;;AAED,MAAKE,KAAK,CAAV,MAAU,CAAV,EAAuB;AACtB;AACA;;AAED,MAAMC,gBAAgB,GAAGC,kDAAG,aAAc,aAAd,mBAAc,CAAd,EAA5B,GAA4B,CAA5B;AACA,MAAMC,iBAAiB,GAAGD,kDAAG,aAAc,aAAd,oBAAc,CAAd,EAA7B,GAA6B,CAA7B;AACAL,WAAS,GAAGO,QAAQ,CAApBP,SAAoB,CAApBA;;AAEA,MAAKG,KAAK,CAAV,SAAU,CAAV,EAA0B;AAAA,gCACFF,MAAM,CAANA,iBADE,GACFA,CADE;AAAA;AAAA,QACfO,QADe;;AAEzBR,aAAS,GAAGQ,QAAQ,GAAGA,QAAQ,CAAX,SAApBR;AACA;;AAED,SAAOF,aAAa,sCAApB,iBAAoB,CAApB;AACA;AAED;;;;;;;;AAOO,kCAAoC;AAC1C,MAAK,CAAEW,uDAAQ,CAAf,KAAe,CAAf,EAA2B;AAC1B;AACA;;AAED;AACC;AACC,aAAOC,IAAI,CAAJA,MAAP,KAAOA,CAAP;;AACD;AACC,aAAOC,YAAY,CAAnB,KAAmB,CAAnB;AAJF;AAMA;AAED;;;;;;;;AAOO,sDAAwD;AAC9D,MAAK,CAAEF,uDAAQ,CAAV,YAAU,CAAV,IAA8B,CAAEA,uDAAQ,CAA7C,cAA6C,CAA7C,EAAkE;AACjE;AACA;;AAED,MAAKG,cAAc,KAAnB,GAA4B;AAC3B;AACA;;AAED,SAAOF,IAAI,CAAJA,MAAY,CAAEG,YAAY,GAAd,mCAAnB,GAAOH,CAAP;AACA,C;;;;;;;;;;;ACzED,aAAa,iCAAiC,EAAE,I","file":"./assets/dist/number/index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./packages/number/build-module/index.js\");\n","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","'use strict';\n\nmodule.exports = function number_format(number, decimals, decPoint, thousandsSep) {\n  // eslint-disable-line camelcase\n  //  discuss at: http://locutus.io/php/number_format/\n  // original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // improved by: davook\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Brett Zamir (http://brett-zamir.me)\n  // improved by: Theriault (https://github.com/Theriault)\n  // improved by: Kevin van Zonneveld (http://kvz.io)\n  // bugfixed by: Michael White (http://getsprink.com)\n  // bugfixed by: Benjamin Lupton\n  // bugfixed by: Allan Jensen (http://www.winternet.no)\n  // bugfixed by: Howard Yeend\n  // bugfixed by: Diogo Resende\n  // bugfixed by: Rival\n  // bugfixed by: Brett Zamir (http://brett-zamir.me)\n  //  revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  //  revised by: Luke Smith (http://lucassmith.name)\n  //    input by: Kheang Hok Chin (http://www.distantia.ca/)\n  //    input by: Jay Klehr\n  //    input by: Amir Habibi (http://www.residence-mixte.com/)\n  //    input by: Amirouche\n  //   example 1: number_format(1234.56)\n  //   returns 1: '1,235'\n  //   example 2: number_format(1234.56, 2, ',', ' ')\n  //   returns 2: '1 234,56'\n  //   example 3: number_format(1234.5678, 2, '.', '')\n  //   returns 3: '1234.57'\n  //   example 4: number_format(67, 2, ',', '.')\n  //   returns 4: '67,00'\n  //   example 5: number_format(1000)\n  //   returns 5: '1,000'\n  //   example 6: number_format(67.311, 2)\n  //   returns 6: '67.31'\n  //   example 7: number_format(1000.55, 1)\n  //   returns 7: '1,000.6'\n  //   example 8: number_format(67000, 5, ',', '.')\n  //   returns 8: '67.000,00000'\n  //   example 9: number_format(0.9, 0)\n  //   returns 9: '1'\n  //  example 10: number_format('1.20', 2)\n  //  returns 10: '1.20'\n  //  example 11: number_format('1.20', 4)\n  //  returns 11: '1.2000'\n  //  example 12: number_format('1.2000', 3)\n  //  returns 12: '1.200'\n  //  example 13: number_format('1 000,50', 2, '.', ' ')\n  //  returns 13: '100 050.00'\n  //  example 14: number_format(1e-8, 8, '.', '')\n  //  returns 14: '0.00000001'\n\n  number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\n  var n = !isFinite(+number) ? 0 : +number;\n  var prec = !isFinite(+decimals) ? 0 : Math.abs(decimals);\n  var sep = typeof thousandsSep === 'undefined' ? ',' : thousandsSep;\n  var dec = typeof decPoint === 'undefined' ? '.' : decPoint;\n  var s = '';\n\n  var toFixedFix = function toFixedFix(n, prec) {\n    if (('' + n).indexOf('e') === -1) {\n      return +(Math.round(n + 'e+' + prec) + 'e-' + prec);\n    } else {\n      var arr = ('' + n).split('e');\n      var sig = '';\n      if (+arr[1] + prec > 0) {\n        sig = '+';\n      }\n      return (+(Math.round(+arr[0] + 'e' + sig + (+arr[1] + prec)) + 'e-' + prec)).toFixed(prec);\n    }\n  };\n\n  // @todo: for IE parseFloat(0.55).toFixed(0) = 0;\n  s = (prec ? toFixedFix(n, prec).toString() : '' + Math.round(n)).split('.');\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n  if ((s[1] || '').length < prec) {\n    s[1] = s[1] || '';\n    s[1] += new Array(prec - s[1].length + 1).join('0');\n  }\n\n  return s.join(dec);\n};\n//# sourceMappingURL=number_format.js.map","/** @format */\n/**\n * External dependencies\n */\nimport { get, isFinite } from 'lodash';\nconst number_format = require( 'locutus/php/strings/number_format' );\n\n/**\n * Formats a number using site's current locale\n *\n * @see http://locutus.io/php/strings/number_format/\n * @param {Number|String} number number to format\n * @param {int|null} [precision=null] optional decimal precision\n * @returns {?String} A formatted string.\n */\nexport function numberFormat( number, precision = null ) {\n\tif ( 'number' !== typeof number ) {\n\t\tnumber = parseFloat( number );\n\t}\n\n\tif ( isNaN( number ) ) {\n\t\treturn '';\n\t}\n\n\tconst decimalSeparator = get( wcSettings, [ 'currency', 'decimal_separator' ], '.' );\n\tconst thousandSeparator = get( wcSettings, [ 'currency', 'thousand_separator' ], ',' );\n\tprecision = parseInt( precision );\n\n\tif ( isNaN( precision ) ) {\n\t\tconst [ , decimals ] = number.toString().split( '.' );\n\t\tprecision = decimals ? decimals.length : 0;\n\t}\n\n\treturn number_format( number, precision, decimalSeparator, thousandSeparator );\n}\n\n/**\n * Formats a number string based on type of `average` or `number`.\n *\n * @param {String} type of number to format, average or number\n * @param {int} value to format.\n * @returns {?String} A formatted string.\n */\nexport function formatValue( type, value ) {\n\tif ( ! isFinite( value ) ) {\n\t\treturn null;\n\t}\n\n\tswitch ( type ) {\n\t\tcase 'average':\n\t\t\treturn Math.round( value );\n\t\tcase 'number':\n\t\t\treturn numberFormat( value );\n\t}\n}\n\n/**\n * Calculates the delta/percentage change between two numbers.\n *\n * @param {int} primaryValue the value to calculate change for.\n * @param {int} secondaryValue the baseline which to calculdate the change against.\n * @returns {?int} Percent change between the primaryValue from the secondaryValue.\n */\nexport function calculateDelta( primaryValue, secondaryValue ) {\n\tif ( ! isFinite( primaryValue ) || ! isFinite( secondaryValue ) ) {\n\t\treturn null;\n\t}\n\n\tif ( secondaryValue === 0 ) {\n\t\treturn 0;\n\t}\n\n\treturn Math.round( ( primaryValue - secondaryValue ) / secondaryValue * 100 );\n}\n","(function() { module.exports = this[\"lodash\"]; }());"],"sourceRoot":""}